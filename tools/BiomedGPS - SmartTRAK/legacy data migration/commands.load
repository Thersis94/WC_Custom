-- import mysql database into mysql

-- compare table & row counts

-- may need to grab the transient table (profile_userobject)

-- reset ownership - even though the conversion runs as root this is important
-- grant all privileges on biomedgps.* to 'django'@'localhost';

-- do some data cleanup:
-- update articles_article set last_update='1970-01-01'  where last_update ='0000-00-00 00:00:00';
-- update articles_article set create_date='1970-01-01'  where create_date ='0000-00-00 00:00:00';
-- update articles_article set content=replace(content,'\0','') where content like '%\0%';
-- update attachments_attachment set last_update='1970-01-01'  where last_update ='0000-00-00 00:00:00';

-- if creating a new PG database to target
-- create database biomedgps;
-- \c biomedgps
-- create user biomedgps with password 'sqll0gin';
-- grant all on database biomedgps to biomedgps;

-- copy the database over to postgres using the command below (LOAD DATABASE) and pgloader
-- Note: this seems to be happier run as root than as myself - not sure why, it only writes files to /tmp/
-- sudo pgloader /scratch/smarttrak/commands.load 

-- man page:
-- http://pgloader.io/howto/pgloader.1.html

-- add this between SET & BEFORE to import the emaillog (only)
-- INCLUDING ONLY TABLE NAMES MATCHING 'emaillog_emaillog'
-- or 
-- EXCLUDING TABLE NAMES MATCHING 'emaillog_emaillog'

LOAD DATABASE
	FROM mysql://root:sqll0gin@10.0.20.33/biomedgps5
	INTO postgresql://wc_user_sb_uat2:sqll0gin@streetfighter/webcrescendo_sb_uat2
	WITH include drop, create tables

  	SET maintenance_work_mem to '128MB', work_mem to '12MB', search_path to 'biomedgps' 

	INCLUDING ONLY TABLE NAMES MATCHING 'emaillog_emaillog'

	BEFORE LOAD DO  
    $$ create schema if not exists biomedgps; $$;



-- get row counts for all tables - run this in dbeaver:
-- PG: SELECT schemaname,relname,n_live_tup  FROM pg_stat_user_tables ORDER BY schemaname,relname,n_live_tup DESC;
-- MY: SELECT table_name, table_rows FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'biomedgps' order by table_name;

--notes:
-- articles_article * 4 failures if the update \0 is not run
-- these are actually VIEWS, not tables:
-- category_nodes
-- profiles_account_metrics
-- profiles_account_subsegments 
-- profiles_user_metrics




